version: '3.8'

# Simplified Docker Compose for WhatsApp API Platform
# Uses Supabase for database (cloud-hosted PostgreSQL)
# Only includes: Redis, Backend Server, Frontend Client

services:
  # Redis Cache & Queue (Required for caching, sessions, and webhook queues)
  redis:
    image: redis:7-alpine
    container_name: whatsapp-api-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - whatsapp-api-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Server (Connects to Supabase for database)
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: whatsapp-api-server
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - ./server/.env
    environment:
      NODE_ENV: development
      PORT: 3000
      REDIS_URL: redis://redis:6379
      # Database connection to Supabase is loaded from .env file
      # Make sure to set DATABASE_URL, SUPABASE_URL, SUPABASE_ANON_KEY in server/.env
    volumes:
      - ./server:/app
      - /app/node_modules
      - whatsapp_sessions:/app/sessions
      - whatsapp_uploads:/app/uploads
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - whatsapp-api-network
    command: npm run dev

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: whatsapp-api-client
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3000
      VITE_WS_URL: ws://localhost:3000
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - whatsapp-api-network
    command: npm run dev -- --host

volumes:
  redis_data:
    driver: local
  whatsapp_sessions:
    driver: local
  whatsapp_uploads:
    driver: local

networks:
  whatsapp-api-network:
    driver: bridge

